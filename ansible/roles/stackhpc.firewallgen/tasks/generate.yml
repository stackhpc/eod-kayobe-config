---

- name: install virtualenv
  package:
    name:
      - python-virtualenv
      - git
    state: present
  become: True
- name: Set up virtualenv
  pip:
    name:
      - git+https://github.com/jovial/firewallgen
      - jinja2 
    virtualenv: /tmp/venv/firewallgen

- name: Set fact containing default interface map
  set_fact:
    default_network_map:
      '127.0.0.1': 'lo'

- name: get virtual interfaces address map
  set_fact:
    vip_addresses:  "{{ vip_addresses | default({}) | combine({ vip: '{{ ' ~ item ~ '_interface }}'}) }}"
  vars:
    vip: "{{ item | net_vip_address }}"
  when: vip | default(False, True)
  with_items: "{{ network_interfaces }}"

- name: Combine virtual and default maps
  set_fact:
    default_network_map: "{{ default_network_map | combine(vip_addresses) }}" 

- name: network_interface_map
  set_fact:
    ip_map: "{{ ip_map | default(default_network_map) | combine({item | net_ip : '{{ ' ~ item ~ '_interface }}'})}}"
  with_items: "{{ network_interfaces }}"

- debug:
    msg: "{{ ip_map }}"

- name: run firewallgen
  vars:
    ansible_python_interpreter: /tmp/venv/firewallgen/bin/python
  firewallgen:
    ip_to_interface_map: "{{ ip_map }}"
    ip_version: 4
  register: firewallgen
  become: True

- name: make sure output directory exists
  file:
    path: "{{ firewallgen_output_path }}"
    state: directory
  delegate_to: localhost

- name: set initial value for sockets_rewrite
  # need to set this in case of no rewrite rules
  set_fact:
    sockets_rewrite: "{{ firewallgen.sockets }}"

- name: rewrite sockets
  set_fact:
    sockets_rewrite: "{{ sockets_rewrite | to_json | jq(item) }}"
  with_items: "{{ firewallgen_ipv4_input_allow_rewrite_rules }}"

- name: write out sockets before rewriting 
  shell:
    cmd: |
      cat <<EOF > /tmp/firewallgen-sockets
      {{ firewallgen.sockets | to_json }}
      EOF
  when: debug | default(False)

- name: write out sockets after rewriting
  shell:
    cmd: |
      cat <<EOF > /tmp/firewallgen-sockets-rewrite
      {{ sockets_rewrite | to_json }}
      EOF
  when: debug | default(False)

- name: output template
  vars:
    firewall_rules: "{{ sockets_rewrite | sort_multi('proto', 'interface', 'port', 'ip') }}"
  template:
    src: sockets-to-rules.j2
    dest: "{{ firewallgen_output_path ~ '/' ~ inventory_hostname }}"
  delegate_to: localhost

- name: dump test output
  debug:
    msg: '{{ firewallgen.sockets }}'
